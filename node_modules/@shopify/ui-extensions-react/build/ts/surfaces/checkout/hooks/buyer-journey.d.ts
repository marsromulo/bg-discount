import type { RenderExtensionTarget, Interceptor, BuyerJourney } from '@shopify/ui-extensions/checkout';
/**
 * Returns the `buyerJourney` details on buyer progression in checkout.
 */
export declare function useBuyerJourney<Target extends RenderExtensionTarget = RenderExtensionTarget>(): BuyerJourney;
/**
 * Returns true if the buyer completed submitting their order.
 *
 * For example, when viewing the order status page after submitting payment, the buyer will have completed their order.
 */
export declare function useBuyerJourneyCompleted<Target extends RenderExtensionTarget = RenderExtensionTarget>(): boolean;
/**
 * Installs a function for intercepting and preventing progress on checkout.
 *
 * To block checkout progress, you must set the [block_progress](https://shopify.dev/docs/api/checkout-ui-extensions/configuration#block-progress)
 * capability in your extension's configuration.
 *
 * If you do, then you're expected to inform the buyer why navigation was blocked,
 * either by passing validation errors to the checkout UI or rendering the errors in your extension.
 */
export declare function useBuyerJourneyIntercept<Target extends RenderExtensionTarget = RenderExtensionTarget>(interceptor: Interceptor): void;
//# sourceMappingURL=buyer-journey.d.ts.map